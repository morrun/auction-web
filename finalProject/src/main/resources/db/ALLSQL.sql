--------------------------------------------------------
--  File created - Thu-Sep-25-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_USER
--------------------------------------------------------

  CREATE TABLE "ECB_USER" 
   (	"USERNAME" VARCHAR2(320 BYTE), 
	"PASSWORD" VARCHAR2(100 BYTE),
    "ONLINESTATUS" NUMBER(1,0),
    "ACTIVATED" NUMBER(1,0),
    "CREDITS" NUMBER,
    "REGISTEREDDATE" DATE DEFAULT SYSDATE NOT NULL,
	"ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Sequence ECB_USER_SEQ
--------------------------------------------------------

CREATE SEQUENCE  "ECB_USER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
REM INSERTING into ECB_USER
SET DEFINE OFF;
Insert into ECB_USER (USERNAME,PASSWORD,ONLINESTATUS,ACTIVATED,CREDITS,REGISTEREDDATE,ID) 
values ('luckzh94@gmail.com','$2a$11$q1sf5mUd1XwOmn6JQu6Zme0vs.ovSe2wU8TqlCFkcpOs89RUgObXG',0
,1,4,TO_DATE('2018/10/25 10:31:22', 'yyyy/mm/dd hh24:mi:ss'),1);
Insert into ECB_USER (USERNAME,PASSWORD,ONLINESTATUS,ACTIVATED,CREDITS,REGISTEREDDATE,ID) 
values ('liuzihao0121@gmail.com','$2a$11$MUm8qXqbWK0F3NqPoZzGme7lsCzuj7gROE5PWpqjwQ/1p7czRx3Ae',0
,1,4,TO_DATE('2018/10/25 10:31:22', 'yyyy/mm/dd hh24:mi:ss'),2);
Insert into ECB_USER (USERNAME,PASSWORD,ONLINESTATUS,ACTIVATED,CREDITS,ID) 
values ('zihao1@yahoo.com','$2a$11$GFOqKK8jG3xG0aM4pOHjr.V3pa504tSDUAu6sm6sfFH3vegtEqfcS',0
,1,4,3);
--Insert into ECB_USER (USEREMAIL,PASSWORD,USERPHONENUMBER,IMAGE,ACTIVATED,CREDITS,BIRTHDAY,REGISTEREDDATE,ID) values ('user','$2a$11$GFOqKK8jG3xG0aM4pOHjr.V3pa504tSDUAu6sm6sfFH3vegtEqfcS',3);
--------------------------------------------------------
--  DDL for Index ECB_USER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_USER_PK" ON "ECB_USER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ECB_USER_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_USER_UK1" ON "ECB_USER" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Trigger ECB_USER_TRG
--------------------------------------------------------
CREATE OR REPLACE TRIGGER "ECB_USER_TRG" 
BEFORE INSERT ON ECB_USER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.USERNAME IS NULL THEN
      SELECT ECB_USER_SEQ.NEXTVAL INTO :NEW.USERNAME FROM SYS.DUAL;
    END IF;
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_USER_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;    
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "ECB_USER_TRG" ENABLE;
--
-- CREATE OR REPLACE TRIGGER "ECB_USER_TRG1" 
-- AFTER INSERT ON ECB_USER 
-- FOR EACH ROW 
-- BEGIN
--  BEGIN
--      :NEW.REGISTEREDDATE := SYSDATE; 
-- END;
-- /
-- ALTER TRIGGER "ECB_USER_TRG1" ENABLE;
-- DROP TRIGGER ECB_USER_TRG1;
--------------------------------------------------------
--  Constraints for Table MSI_USER
--------------------------------------------------------

  ALTER TABLE "ECB_USER" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER" ADD CONSTRAINT "ECB_USER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "ECB_USER" ADD CONSTRAINT "ECB_USER_UK1" UNIQUE ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
 --------------------------------------------------------
--  DDL for Table ECB_USER_DETAIL
--------------------------------------------------------

  CREATE TABLE "ECB_USER_DETAIL" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(100 BYTE), 
	"PHONE" VARCHAR2(20 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE), 
	"ADDRESS1" VARCHAR2(100 BYTE), 
	"ADDRESS2" VARCHAR2(100 BYTE), 
	"CITY" VARCHAR2(100 BYTE), 
	"STATE" VARCHAR2(100 BYTE), 
	"ZIP" VARCHAR2(100 BYTE),
    "IMAGE" VARCHAR2(200 BYTE),
	"USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Sequence ECB_USER_DETAIL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_USER_DETAIL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Index ECB_USER_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_USER_DETAIL_PK" ON "ECB_USER_DETAIL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Trigger ECB_USER_DETAIL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_USER_DETAIL_TRG" 
BEFORE INSERT ON ECB_USER_DETAIL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_USER_DETAIL_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "ECB_USER_DETAIL_TRG" ENABLE;
--------------------------------------------------------
--  Constraints for Table ECB_USER_DETAIL
--------------------------------------------------------

  ALTER TABLE "ECB_USER_DETAIL" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER_DETAIL" ADD CONSTRAINT "ECB_USER_DETAIL_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  
--------------------------------------------------------
--  File created - Sat-Oct-27-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_USER_ECB_USER_PROFILE
--------------------------------------------------------

  CREATE TABLE "ECB_USER_ECB_USER_PROFILE" 
   (	"ID" NUMBER, 
	"USER_ID" NUMBER, 
	"USER_PROFILE_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Sequence ECB_USER_ECB_USER_PROFILE_SEQ
--------------------------------------------------------

CREATE SEQUENCE  "ECB_USER_ECB_USER_PROFILE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
REM INSERTING into ECB_USER_ECB_USER_PROFILE
SET DEFINE OFF;
Insert into ECB_USER_ECB_USER_PROFILE (ID,USER_ID,USER_PROFILE_ID) values (1,1,1);
Insert into ECB_USER_ECB_USER_PROFILE (ID,USER_ID,USER_PROFILE_ID) values (2,2,2);
Insert into ECB_USER_ECB_USER_PROFILE (ID,USER_ID,USER_PROFILE_ID) values (3,3,2);
--------------------------------------------------------
--  DDL for Index ECB_USER_ECB_USER_PROFILE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_USER_ECB_USER_PROFILE_PK" ON "ECB_USER_ECB_USER_PROFILE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Trigger ECB_USER_ECB_USER_PROFILE_TRG
--------------------------------------------------------

CREATE OR REPLACE TRIGGER "ECB_USER_ECB_USER_PROFILE_TRG" 
BEFORE INSERT ON ECB_USER_ECB_USER_PROFILE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_USER_ECB_USER_PROFILE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "ECB_USER_ECB_USER_PROFILE_TRG" ENABLE;
--------------------------------------------------------
--  Constraints for Table ECB_USER_ECB_USER_PROFILE
--------------------------------------------------------

  ALTER TABLE "ECB_USER_ECB_USER_PROFILE" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER_ECB_USER_PROFILE" MODIFY ("USER_ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER_ECB_USER_PROFILE" MODIFY ("USER_PROFILE_ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER_ECB_USER_PROFILE" ADD CONSTRAINT "ECB_USER_ECB_USER_PROFILE_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  
--------------------------------------------------------
--  File created - Sat-Oct-27-2018  
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_PRODUCT
--------------------------------------------------------

  CREATE TABLE "ECB_PRODUCT" 
   (	"ID" NUMBER, 
	"TITLE" VARCHAR2(255 BYTE),
    "DESCRIPTION" VARCHAR2(1000),
    "TYPE_ID" NUMBER, 
	"PRICE" NUMBER, 
	"DEADLINE" DATE 
--	"PRODUCT_IMAGE_ID" NUMBER  
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Sequence ECB_PRODUCT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_PRODUCT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
REM INSERTING into ECB_PRODUCT
SET DEFINE OFF;
Insert into ECB_PRODUCT (ID,TITLE,DESCRIPTION,TYPE_ID,PRICE,DEADLINE) 
values (1,'New iPhoneXS is saling','very new very new very new very new',1,888,TO_DATE('2018/11/25 10:31:22', 'yyyy/mm/dd hh24:mi:ss'));
--Insert into ECB_PRODUCT (ID,NAME,BRAND,PRICE,STOCK,IMAGE) values (2,'Water','Costco',20,200,null);
--Insert into ECB_PRODUCT (ID,NAME,BRAND,PRICE,STOCK,IMAGE) values (3,'Milk','Wholefoods',30,300,null);
--------------------------------------------------------
--  DDL for Index PRODUCT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_PRODUCT_PK" ON "ECB_PRODUCT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Trigger ECB_PRODUCT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_PRODUCT_TRG" 
BEFORE INSERT ON ECB_PRODUCT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_PRODUCT_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "ECB_PRODUCT_TRG" ENABLE;

--------------------------------------------------------
--  Constraints for Table ECB_PRODUCT
--------------------------------------------------------

  ALTER TABLE "ECB_PRODUCT" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_PRODUCT" MODIFY ("TITLE" NOT NULL ENABLE);
  ALTER TABLE "ECB_PRODUCT" MODIFY ("TYPE_ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_PRODUCT" MODIFY ("PRICE" NOT NULL ENABLE);
  ALTER TABLE "ECB_PRODUCT" MODIFY ("DEADLINE" NOT NULL ENABLE);
  ALTER TABLE "ECB_PRODUCT" ADD CONSTRAINT "ECB_PRODUCT_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  
--------------------------------------------------------
--  File created - Su -Oct-28-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_PRODUCT_IMAGE
--------------------------------------------------------

  CREATE TABLE "ECB_PRODUCT_IMAGE" 
   (	"ID" NUMBER, 
	"IMAGE" varchar2(200),
    "PRODUCT_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Sequence ECB_PRODUCT_TYPE_SEQ
--------------------------------------------------------

CREATE SEQUENCE  "ECB_PRODUCT_IMAGE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
REM INSERTING into ECB_PRODUCT_IMAGE
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index ECB_PRODUCT_IMAGE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_PRODUCT_IMAGE_PK" ON "ECB_PRODUCT_IMAGE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Trigger ECB_PRODUCT_IMAGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_PRODUCT_IMAGE_TRG" 
BEFORE INSERT ON ECB_PRODUCT_IMAGE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_PRODUCT_IMAGE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "ECB_PRODUCT_IMAGE_TRG" ENABLE;

--------------------------------------------------------
--  Constraints for Table ECB_PRODUCT_IMAGE
--------------------------------------------------------

  ALTER TABLE "ECB_PRODUCT_IMAGE" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_PRODUCT_IMAGE" ADD CONSTRAINT "ECB_PRODUCT_IMAGE_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;


--------------------------------------------------------
--  File created - Sat-Oct-27-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_PRODUCT_TYPE
--------------------------------------------------------

  CREATE TABLE "ECB_PRODUCT_TYPE" 
   (	"ID" NUMBER, 
	"TYPE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Sequence ECB_PRODUCT_TYPE_SEQ
--------------------------------------------------------

CREATE SEQUENCE  "ECB_PRODUCT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
REM INSERTING into ECB_PRODUCT_TYPE
SET DEFINE OFF;
Insert into ECB_PRODUCT_TYPE (ID,TYPE) values (1,'ELECTRONIC PRODUCT');
Insert into ECB_PRODUCT_TYPE (ID,TYPE) values (2,'FURNITURE');
Insert into ECB_PRODUCT_TYPE (ID,TYPE) values (3,'COMMODITY');
Insert into ECB_PRODUCT_TYPE (ID,TYPE) values (4,'CLOTHING');
--------------------------------------------------------
--  DDL for Index ECB_PRODUCT_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_PRODUCT_TYPE_PK" ON "ECB_PRODUCT_TYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ECB_PRODUCT_TYPE_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_PRODUCT_TYPE_UK1" ON "ECB_PRODUCT_TYPE" ("TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Trigger ECB_PRODUCT_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_PRODUCT_TYPE_TRG" 
BEFORE INSERT ON ECB_PRODUCT_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_PRODUCT_TYPE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "ECB_PRODUCT_TYPE_TRG" ENABLE;

--------------------------------------------------------
--  Constraints for Table MSI_USER_PROFILE
--------------------------------------------------------

  ALTER TABLE "ECB_PRODUCT_TYPE" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_PRODUCT_TYPE" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "ECB_PRODUCT_TYPE" ADD CONSTRAINT "ECB_PRODUCT_TYPE_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "ECB_PRODUCT_TYPE" ADD CONSTRAINT "ECB_PRODUCT_TYPE_UK1" UNIQUE ("TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;

--------------------------------------------------------
--  File created - Sat--Oct-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_USER_PROFILE
--------------------------------------------------------

  CREATE TABLE "ECB_USER_PROFILE" 
   (	"ID" NUMBER, 
	"TYPE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  --------------------------------------------------------
--  DDL for Sequence ECB_USER_PROFILE_SEQ
--------------------------------------------------------

CREATE SEQUENCE  "ECB_USER_PROFILE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
REM INSERTING into ECB_USER_PROFILE
SET DEFINE OFF;
Insert into ECB_USER_PROFILE (ID,TYPE) values (1,'ROLE_ADMIN');
Insert into ECB_USER_PROFILE (ID,TYPE) values (2,'ROLE_USER');
--------------------------------------------------------
--  DDL for Index ECB_USER_PROFILE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_USER_PROFILE_PK" ON "ECB_USER_PROFILE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ECB_USER_PROFILE_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_USER_PROFILE_UK1" ON "ECB_USER_PROFILE" ("TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Trigger ECB_USER_PROFILE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_USER_PROFILE_TRG" 
BEFORE INSERT ON ECB_USER_PROFILE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_USER_PROFILE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "ECB_USER_PROFILE_TRG" ENABLE;
--------------------------------------------------------
--  Constraints for Table ECB_USER_PROFILE
--------------------------------------------------------

  ALTER TABLE "ECB_USER_PROFILE" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER_PROFILE" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "ECB_USER_PROFILE" ADD CONSTRAINT "ECB_USER_PROFILE_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "ECB_USER_PROFILE" ADD CONSTRAINT "ECB_USER_PROFILE_UK1" UNIQUE ("TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  DDL for Table ECB_VISIT_HISTORY
--------------------------------------------------------

  CREATE TABLE "ECB_VISIT_HISTORY" 
   (	
   "ID" NUMBER, 
	"VISITATION_ID" NUMBER, 
	"PRODUCT_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Sequence ECB_VISIT_HISTORY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_VISIT_HISTORY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
   Insert into ECB_VISIT_HISTORY (ID,VISITATION_ID,PRODUCT_ID) values (1,1,1);

--------------------------------------------------------
--  DDL for Index ECB_VISIT_HISTORY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_VISIT_HISTORY_PK" ON "ECB_VISIT_HISTORY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Trigger ECB_VISIT_HISTORY_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_VISIT_HISTORY_TRG" 
BEFORE INSERT ON ECB_VISIT_HISTORY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_VISIT_HISTORY_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


/
ALTER TRIGGER "ECB_VISIT_HISTORY_TRG" ENABLE;

--------------------------------------------------------
--  Constraints for Table ECB_VISIT_HISTORY
--------------------------------------------------------

  ALTER TABLE "ECB_VISIT_HISTORY" ADD CONSTRAINT "ECB_VISIT_HISTORY_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "ECB_VISIT_HISTORY" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  File created - Sat-Oct-27-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_VISITATION
--------------------------------------------------------

  CREATE TABLE "ECB_VISITATION" 
   (	"ID" NUMBER, 
	"VISITATION_DATE" DATE DEFAULT SYSDATE NOT NULL,
    "USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Sequence ECB_VISITATION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_VISITATION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
Insert into ECB_VISITATION (ID,USER_ID) values (1,1);

--------------------------------------------------------
--  DDL for Index ECB_VISITATION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_VISITATION_PK" ON "ECB_VISITATION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Trigger ECB_VISITATION_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_VISITATION_TRG" 
BEFORE INSERT ON ECB_VISITATION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_VISITATION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "ECB_VISITATION_TRG" ENABLE;
--------------------------------------------------------
--  Constraints for Table ECB_ORDER
--------------------------------------------------------

  ALTER TABLE "ECB_VISITATION" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_VISITATION" ADD CONSTRAINT "ECB_VISITATION_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  
--------------------------------------------------------
--  File created - Sat-Oct-27-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_SHELVES
--------------------------------------------------------

  CREATE TABLE "ECB_SHELVES" 
   (	"ID" NUMBER, 
	"ON_SHELVES_DATE" DATE DEFAULT SYSDATE NOT NULL,
    "USER_ID" NUMBER,
    "TYPE" VARCHAR2(20)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Sequence ECB_SHELVES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_SHELVES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
Insert into ECB_SHELVES (ID,USER_ID,TYPE) values (1,1,'AUNCTION');
Insert into ECB_SHELVES (ID,USER_ID,TYPE) values (2,1,'SELL');

--------------------------------------------------------
--  DDL for Index ECB_SHELVES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_SHELVES_PK" ON "ECB_SHELVES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Trigger ECB_SHELVES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_SHELVES_TRG" 
BEFORE INSERT ON ECB_SHELVES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_SHELVES_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "ECB_SHELVES_TRG" ENABLE;

--------------------------------------------------------
--  Constraints for Table ECB_SHELVES
--------------------------------------------------------

  ALTER TABLE "ECB_SHELVES" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_SHELVES" ADD CONSTRAINT "ECB_SHELVES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  
 --------------------------------------------------------
--  DDL for Table ECB_SHELVES_PRODUCT
--------------------------------------------------------

  CREATE TABLE "ECB_SHELVES_PRODUCT" 
   (	
   "ID" NUMBER, 
	"SHELVES_ID" NUMBER, 
	"PRODUCT_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Sequence ECB_SHELVES_PRODUCT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_SHELVES_PRODUCT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
   Insert into ECB_SHELVES_PRODUCT (ID,SHELVES_ID,PRODUCT_ID) values (1,1,1);

--------------------------------------------------------
--  DDL for Index ECB_ORDER_PRODUCT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_SHELVES_PRODUCT_PK" ON "ECB_SHELVES_PRODUCT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Trigger ECB_SHELVES_PRODUCT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_SHELVES_PRODUCT_TRG" 
BEFORE INSERT ON ECB_SHELVES_PRODUCT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_SHELVES_PRODUCT_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


/
ALTER TRIGGER "ECB_SHELVES_PRODUCT_TRG" ENABLE;

--------------------------------------------------------
--  Constraints for Table ECB_SHELVES_PRODUCT
--------------------------------------------------------

  ALTER TABLE "ECB_SHELVES_PRODUCT" ADD CONSTRAINT "ECB_SHELVES_PRODUCT_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "ECB_SHELVES_PRODUCT" MODIFY ("ID" NOT NULL ENABLE);
  
--------------------------------------------------------
--  DDL for Table ECB_OPERATIONS_HISTORY_VIEW
--------------------------------------------------------
  CREATE TABLE "ECB_OPERATIONS_VIEW" 
   (	
    "ID" NUMBER, 
	"SELLER_USER_ID" NUMBER,
    "SELLER_USER_NAME" VARCHAR2(100),
	"BUYER_USER_ID" NUMBER,
    "BUYER_USER_NAME" VARCHAR2(100),
    "ORIGINAL_PRICE" NUMBER,
    "NOW_PRICE" NUMBER,
    "VIEW_STATUS" NUMBER,
    "PRODUCT_ID" NUMBER,
    "OPERATION_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
  
--------------------------------------------------------
--  DDL for Sequence ECB_OPERATIONS_HISTORY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_OPERATIONS_VIEW_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
--   Insert into ECB_OPERATIONS_HISTORY (ID,OPERATIONS_ID,PRODUCT_ID,PRICE) values (1,1,1,900);
--   Insert into ECB_OPERATIONS_HISTORY (ID,OPERATIONS_ID,PRODUCT_ID,PRICE) values (2,2,2,1120);
   
--------------------------------------------------------
--  DDL for Index ECB_OPERATIONS_HISTORY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_OPERATIONS_VIEW_PK" ON "ECB_OPERATIONS_VIEW" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  

--------------------------------------------------------
--  DDL for Trigger ECB_ORDER_PRODUCT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_OPERATIONS_VIEW_TRG" 
BEFORE INSERT ON ECB_OPERATIONS_VIEW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_OPERATIONS_VIEW_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "ECB_OPERATIONS_VIEW_TRG" ENABLE;
--------------------------------------------------------
--  Constraints for Table ECB_OPERATIONS_HISTORY
--------------------------------------------------------

  ALTER TABLE "ECB_OPERATIONS_VIEW" ADD CONSTRAINT "ECB_OPERATIONS_VIEW_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "ECB_OPERATIONS_VIEW" MODIFY ("ID" NOT NULL ENABLE);
  
--------------------------------------------------------
--  File created - Sat-Oct-27-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ECB_OPERATIONS
--------------------------------------------------------

  CREATE TABLE "ECB_OPERATIONS" 
   (	"ID" NUMBER, 
	"TYPE" VARCHAR2(30),
    "USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Sequence ECB_OPERATIONS_SEQ
--------------------------------------------------------

CREATE SEQUENCE  "ECB_OPERATIONS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
Insert into ECB_OPERATIONS (ID,TYPE,USER_ID) values (1,'AUCTION',1);
Insert into ECB_OPERATIONS (ID,TYPE,USER_ID) values (2,'SELL',1);

--------------------------------------------------------
--  DDL for Index ECB_OPERATIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_OPERATIONS_PK" ON "ECB_OPERATIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Trigger ECB_OPERATIONS_TRG
--------------------------------------------------------

CREATE OR REPLACE TRIGGER "ECB_OPERATIONS_TRG" 
BEFORE INSERT ON ECB_OPERATIONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_OPERATIONS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "ECB_OPERATIONS_TRG" ENABLE;

--------------------------------------------------------
--  Constraints for Table ECB_OPERATIONS
--------------------------------------------------------

  ALTER TABLE "ECB_OPERATIONS" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "ECB_OPERATIONS" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "ECB_OPERATIONS" ADD CONSTRAINT "ECB_OPERATIONS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;

--------------------------------------------------------
--  DDL for Table ECB_OPERATIONS_HISTORY
--------------------------------------------------------
  CREATE TABLE "ECB_OPERATIONS_HISTORY" 
   (	
   "ID" NUMBER, 
	"OPERATIONS_ID" NUMBER, 
	"PRODUCT_ID" NUMBER,
    "OPERATION_DATE" DATE DEFAULT SYSDATE,
    "PRICE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
  
--------------------------------------------------------
--  DDL for Sequence ECB_OPERATIONS_HISTORY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_OPERATIONS_HISTORY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
   Insert into ECB_OPERATIONS_HISTORY (ID,OPERATIONS_ID,PRODUCT_ID,PRICE) values (1,1,1,900);
   Insert into ECB_OPERATIONS_HISTORY (ID,OPERATIONS_ID,PRODUCT_ID,PRICE) values (2,2,2,1120);
   
--------------------------------------------------------
--  DDL for Index ECB_OPERATIONS_HISTORY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_OPERATIONS_HISTORY_PK" ON "ECB_OPERATIONS_HISTORY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  

--------------------------------------------------------
--  DDL for Trigger ECB_ORDER_PRODUCT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_OPERATIONS_HISTORY_TRG" 
BEFORE INSERT ON ECB_OPERATIONS_HISTORY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_OPERATIONS_HISTORY_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "ECB_OPERATIONS_HISTORY_TRG" ENABLE;
--------------------------------------------------------
--  Constraints for Table ECB_OPERATIONS_HISTORY
--------------------------------------------------------

  ALTER TABLE "ECB_OPERATIONS_HISTORY" ADD CONSTRAINT "ECB_OPERATIONS_HISTORY_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "ECB_OPERATIONS_HISTORY" MODIFY ("ID" NOT NULL ENABLE);

--------------------------------------------------------
--  DDL for Table ECB_ORDER_PRODUCT
--------------------------------------------------------

  CREATE TABLE "ECB_ORDER_PRODUCT" 
   (	
   "ID" NUMBER, 
	"USER_ID" NUMBER, 
	"PRODUCT_ID" NUMBER,
    "PURCHASE_DATE" DATE DEFAULT SYSDATE NOT NULL,
    "PRICE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Sequence ECB_ORDER_PRODUCT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ECB_ORDER_PRODUCT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER  NOCYCLE ;
   Insert into ECB_ORDER_PRODUCT (ID,USER_ID,PRODUCT_ID) values (1,1,1);

--------------------------------------------------------
--  DDL for Index ECB_ORDER_PRODUCT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ECB_ORDER_PRODUCT_PK" ON "ECB_ORDER_PRODUCT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Trigger ECB_ORDER_PRODUCT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ECB_ORDER_PRODUCT_TRG" 
BEFORE INSERT ON ECB_ORDER_PRODUCT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ECB_ORDER_PRODUCT_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


/
ALTER TRIGGER "ECB_ORDER_PRODUCT_TRG" ENABLE;

--------------------------------------------------------
--  Constraints for Table ECB_ORDER_PRODUCT
--------------------------------------------------------

  ALTER TABLE "ECB_ORDER_PRODUCT" ADD CONSTRAINT "ECB_ORDER_PRODUCT_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "ECB_ORDER_PRODUCT" MODIFY ("ID" NOT NULL ENABLE);